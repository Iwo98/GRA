<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="menu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wf7iDi6BoeAxgAAAABJRU5ErkJggg==
</value>
  </data>
</root>